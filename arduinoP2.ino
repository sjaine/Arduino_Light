#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Arduino_SensorKit.h>
#include <string.h>
#include <Wire.h>

#define OLED_RESET 4
Adafruit_SSD1306 display(OLED_RESET);

#define FRAME_DELAY (42)
#define FRAME_WIDTH (32)
#define FRAME_HEIGHT (32)
#define FRAME_COUNT (sizeof(frames) / sizeof(frames[0]))
const byte PROGMEM frames[][128] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,1,128,0,0,1,128,0,0,1,128,0,3,1,128,192,1,128,1,128,0,192,3,0,0,67,226,0,0,14,240,0,0,24,24,0,0,48,12,0,0,48,4,0,0,96,14,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,1,128,0,0,1,128,0,0,1,128,0,3,1,128,192,1,128,1,128,0,192,3,0,0,67,226,0,0,14,240,0,0,24,24,0,0,48,12,0,0,48,4,0,0,96,14,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,1,128,0,0,1,128,0,0,1,128,0,3,1,128,192,1,128,1,128,0,192,3,0,0,67,226,0,0,14,240,0,0,24,24,0,0,48,12,0,0,48,4,0,0,96,14,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,1,128,0,0,1,128,0,0,1,128,0,3,1,128,192,1,128,1,128,0,192,3,0,0,67,226,0,0,14,240,0,0,24,24,0,0,48,12,0,0,48,4,0,0,96,14,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,2,1,1,128,3,128,3,0,1,192,7,0,0,195,224,0,0,14,240,0,0,24,24,0,0,48,12,0,0,48,4,0,0,32,4,120,30,32,4,112,63,112,12,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,1,128,0,1,3,128,3,0,3,0,3,128,6,0,1,131,192,0,0,15,240,0,0,24,24,0,0,48,12,0,0,48,4,0,0,32,4,248,0,32,4,0,31,32,4,0,0,32,12,0,0,48,12,0,0,24,24,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,2,1,0,0,2,3,0,0,0,6,0,7,0,4,0,3,129,192,0,0,143,240,0,0,24,56,0,0,48,8,0,0,48,12,56,0,32,4,240,0,32,4,0,6,32,4,0,30,32,12,0,0,48,12,0,0,24,24,0,0,14,113,0,0,7,225,128,0,32,1,224,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,6,2,0,0,6,3,0,0,2,6,0,0,0,12,0,6,0,0,0,3,131,224,0,1,142,240,0,0,24,24,0,0,48,12,24,0,48,4,248,0,32,4,0,0,32,4,0,0,32,4,0,31,48,12,0,16,16,12,0,0,24,24,0,0,15,241,128,0,3,193,224,0,0,0,96,0,48,0,0,0,96,96,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,4,2,0,0,4,6,0,0,4,14,0,0,0,12,0,4,0,0,0,6,1,192,0,3,143,240,0,1,24,24,0,0,48,8,56,0,48,12,224,0,48,4,0,0,32,4,0,0,32,4,0,3,32,12,0,30,48,12,0,0,24,24,0,0,14,113,192,0,7,192,224,0,0,0,48,0,48,0,0,0,48,32,0,0,96,32,0,0,96,48,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,8,6,0,0,12,12,0,0,4,12,0,0,0,8,0,0,0,0,0,14,7,224,0,7,12,112,0,1,24,24,56,0,48,12,224,0,48,4,0,0,32,4,0,0,32,4,0,0,32,12,0,3,48,12,0,30,16,28,0,16,28,25,192,0,15,240,240,0,3,128,48,0,0,0,0,0,16,32,0,0,48,32,0,0,112,48,0,0,96,16,0,0,0,24,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,4,0,0,8,12,0,0,8,12,0,0,12,24,0,0,0,0,0,0,0,128,0,12,7,224,0,15,12,112,16,3,24,24,240,0,48,12,128,0,48,12,0,0,32,4,0,0,32,4,0,0,32,12,0,1,48,12,0,7,24,28,128,12,28,56,224,0,15,240,112,0,3,128,0,0,0,0,0,0,24,48,0,0,24,16,0,0,48,16,0,0,48,24,0,0,0,8,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,8,0,0,16,12,0,0,24,24,0,0,8,24,0,0,0,0,0,0,0,0,0,0,7,224,0,14,12,112,48,7,24,24,224,0,48,8,0,0,48,12,0,0,32,4,0,0,32,4,0,0,32,12,0,0,48,12,0,3,16,12,192,14,24,24,240,8,15,240,48,0,3,192,0,0,0,0,0,0,8,16,0,0,24,16,0,0,24,24,0,0,48,8,0,0,0,8,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,48,24,0,0,16,24,0,0,24,48,0,0,8,16,0,0,0,0,0,0,3,224,0,8,14,240,48,15,24,24,224,7,48,8,0,0,48,12,0,0,48,4,0,0,32,4,0,0,32,12,0,0,48,12,0,0,16,12,192,3,24,24,240,14,14,48,16,0,7,224,0,0,0,0,0,0,0,16,0,0,12,24,0,0,24,8,0,0,24,12,0,0,16,4,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,32,24,0,0,32,16,0,0,48,48,0,0,16,48,0,0,16,0,0,0,0,128,0,0,15,224,48,8,12,48,224,15,24,24,0,3,48,8,0,0,48,12,0,0,32,4,0,0,32,4,0,0,48,12,0,0,48,12,192,0,24,24,240,3,156,56,56,14,15,240,0,0,3,128,0,0,0,0,0,0,12,8,0,0,12,8,0,0,8,12,0,0,24,4,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,16,0,0,96,48,0,0,32,48,0,0,48,48,0,0,16,32,0,0,0,0,0,0,1,192,48,0,15,240,224,8,24,25,128,31,48,8,0,3,48,12,0,0,48,4,0,0,32,4,0,0,32,4,0,0,48,12,0,0,48,12,240,0,24,24,56,3,142,48,0,14,7,224,0,0,0,0,0,0,0,8,0,0,12,12,0,0,12,4,0,0,12,6,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,16,0,0,0,48,0,0,96,48,0,0,96,48,0,0,48,32,0,0,16,0,0,0,0,0,0,0,3,224,112,0,14,241,192,8,24,24,0,31,48,12,0,3,48,4,0,0,32,4,0,0,32,4,0,0,32,4,0,0,48,12,224,0,16,12,120,1,152,24,0,3,143,240,0,14,3,192,0,0,0,0,0,0,0,12,0,0,4,12,0,0,12,6,0,0,12,2,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,32,0,0,0,48,0,0,64,32,0,0,96,96,0,0,32,32,0,0,48,0,0,0,0,0,32,0,7,224,224,0,14,113,128,0,24,24,0,31,48,12,0,7,48,4,0,0,32,4,0,0,32,4,0,0,32,4,0,0,48,12,248,0,24,28,56,0,156,56,0,3,143,240,0,14,1,128,0,0,0,8,0,0,0,12,0,0,6,6,0,0,4,6,0,0,12,2,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,32,0,0,0,32,0,0,64,96,0,0,96,96,0,0,32,96,0,0,48,0,0,0,0,0,96,0,7,225,192,0,14,113,0,0,24,24,0,30,48,12,0,7,32,4,0,0,96,4,0,0,32,6,0,0,32,4,64,0,48,12,248,0,56,28,0,0,156,56,0,3,143,224,0,6,0,0,0,4,0,12,0,0,2,4,0,0,6,6,0,0,6,2,0,0,4,2,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,32,0,0,0,96,0,0,192,96,0,0,96,96,0,0,96,64,0,0,48,0,32,0,0,0,224,0,3,225,192,0,14,241,0,0,24,28,0,30,48,12,0,15,32,4,0,0,96,6,0,0,96,6,0,0,32,4,240,0,48,12,120,0,56,28,0,0,158,56,0,1,143,224,0,7,0,0,0,4,0,12,0,0,2,6,0,0,6,6,0,0,6,3,0,0,6,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,96,0,0,0,96,0,0,192,96,0,0,64,96,0,0,96,64,0,0,32,0,32,0,0,0,224,0,3,225,128,0,14,241,0,0,24,28,0,30,48,12,0,31,96,4,0,0,96,6,0,0,96,6,0,0,32,6,240,0,48,12,120,0,56,28,0,0,30,120,0,1,135,224,0,7,0,0,0,4,0,12,0,0,2,6,0,0,6,2,0,0,6,3,0,0,6,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,96,0,0,0,96,0,0,192,96,0,0,192,96,0,0,96,64,0,0,32,0,96,0,0,0,224,0,3,225,128,0,14,240,0,0,56,28,0,30,48,12,0,31,96,4,0,0,96,6,0,0,96,6,0,0,32,6,248,0,48,12,120,0,56,28,0,0,31,112,0,1,135,192,0,7,0,0,0,6,0,4,0,0,2,6,0,0,6,3,0,0,6,3,0,0,6,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,96,0,0,0,96,0,0,192,96,0,0,192,64,0,0,96,64,0,0,32,0,96,0,0,0,192,0,3,193,128,0,14,248,0,0,56,28,0,30,48,12,0,31,96,6,0,0,96,6,0,0,96,6,0,0,96,6,248,0,48,12,56,0,56,24,0,0,15,240,0,1,131,128,0,7,0,0,0,4,0,4,0,0,2,6,0,0,6,3,0,0,6,1,0,0,6,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,96,0,0,0,96,0,0,192,96,0,0,192,64,0,0,96,0,0,0,32,0,96,0,0,0,192,0,7,225,128,0,28,120,0,0,56,28,0,30,48,12,0,31,96,4,0,0,96,6,0,0,96,6,0,0,32,6,248,0,48,12,16,0,24,24,0,0,15,240,0,1,131,128,0,7,0,0,0,6,0,4,0,0,2,6,0,0,2,3,0,0,6,1,0,0,6,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,64,0,0,0,64,0,0,128,64,0,0,192,64,0,0,64,64,0,0,96,0,96,0,0,0,192,0,3,225,128,0,14,240,0,0,24,24,0,0,48,12,0,31,32,4,0,2,96,6,0,0,96,6,0,0,32,6,120,0,48,12,24,0,56,28,0,0,30,56,0,0,143,224,0,3,128,0,0,6,0,4,0,0,0,6,0,0,2,3,0,0,2,1,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,0,192,0,0,0,192,0,0,0,192,0,1,128,192,0,0,192,0,64,0,96,1,192,0,0,131,128,0,15,240,0,0,28,56,0,0,48,28,0,0,48,4,0,30,32,4,0,14,96,4,0,0,32,6,120,0,32,12,16,0,48,12,0,0,24,24,0,0,15,112,0,0,199,192,0,1,128,6,0,3,0,7,0,0,1,3,0,0,3,1,128,0,3,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,1,128,0,0,1,128,0,0,1,128,0,0,1,128,0,3,1,128,192,1,128,1,128,0,192,3,0,0,67,226,0,0,14,240,0,0,24,24,0,0,48,12,0,0,48,4,0,0,32,4,0,31,32,4,120,0,32,4,0,0,32,12,0,0,48,12,0,0,28,24,0,0,15,240,0,0,67,130,0,0,192,3,0,1,128,1,128,1,1,128,192,0,1,128,0,0,1,128,0,0,1,128,0,0,1,128,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,1,128,0,0,1,128,0,0,1,128,0,0,1,128,0,3,1,128,192,1,128,1,128,0,192,3,0,0,67,226,0,0,14,240,0,0,24,24,0,0,48,12,0,0,48,4,0,0,32,4,0,31,32,4,120,0,32,4,0,0,32,12,0,0,48,12,0,0,28,24,0,0,15,240,0,0,67,130,0,0,192,3,0,1,128,1,128,1,1,128,192,0,1,128,0,0,1,128,0,0,1,128,0,0,1,128,0,0,0,0,0,0,0,0,0,255,255,255,255},
  {0,0,0,0,0,0,0,0,0,1,128,0,0,1,128,0,0,1,128,0,0,1,128,0,3,1,128,192,1,128,1,128,0,192,3,0,0,67,226,0,0,14,240,0,0,24,24,0,0,48,12,0,0,48,4,0,0,32,4,0,31,32,4,120,0,32,4,0,0,32,12,0,0,48,12,0,0,28,24,0,0,15,240,0,0,67,130,0,0,192,3,0,1,128,1,128,1,1,128,192,0,1,128,0,0,1,128,0,0,1,128,0,0,1,128,0,0,0,0,0,0,0,0,0,255,255,255,255}
};

int light_sensor = A3; 
bool wasLightHigh = false; 

struct MessageValue {
  String message;
  String value;
};

void sendMessage(struct MessageValue message) { 
  Serial.print(message.message);
  Serial.print("||");
  Serial.print(message.value);
  Serial.println();
}

struct MessageValue getMessage(String inputtedStr) {
  struct MessageValue result;

  char charArr[50];
  inputtedStr.toCharArray(charArr, 50);
  char* ptr = strtok(charArr, "||");
  result.message = String(ptr);
  ptr = strtok(NULL, "||");

  if (ptr == NULL) {
    result.value = String("");
    return result;
  }
  result.value = String(ptr);
  return result;
}

void setup() {
  Serial.begin(9600); //this number needs to match the baud rate you select in ProtoPie Connect arduino plugin
  Serial.setTimeout(10); // Set waiting time for serial data to 10 milliSeconds
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  display.clearDisplay();

  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println("SSD1306 allocation failed");
    while (true); 
  } else {
    Serial.println("Works");
  }
}

int frame = 0;

void loop() {
  struct MessageValue receivedData;

  while (Serial.available() > 0) { // Take out strings until Serial is empty
    String receivedString = Serial.readStringUntil('\0'); // From 1.9.0 version, We can use '\0' as delimiter in Arduino Serial
    receivedData = getMessage(receivedString);
  }

  // get the value of the light sensor
  int raw_light = analogRead(light_sensor);
  int light = map(raw_light, 0, 100, 0, 100);

  // send a message through ProtoPie Connect
  struct MessageValue brightness;
  brightness.message = "brightness";
  brightness.value = light;
  sendMessage(brightness);

  // if the level is more than 90, than animation will be start
  if (light >= 90) {
    wasLightHigh = true;
  } else if (light <= 10) {
    wasLightHigh = false; // if the level is lower than 10, the animation will be stopped
    frame = 0; 
  }

  // the code of animation 
  if(wasLightHigh) {
    display.clearDisplay(); 
    display.setRotation(1);
    display.drawBitmap(0, 50, frames[frame], FRAME_WIDTH, FRAME_HEIGHT, 1);
    display.display();
    frame = (frame + 1) % FRAME_COUNT;
  }
  
  delay(FRAME_DELAY);
}

